{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\PGROUP\\\\ReactSpringBoot\\\\HCERES-Spring-Boot\\\\hceres-frontend\\\\src\\\\components\\\\Activity\\\\ScientificExpertise.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Activity.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScientificExpertise = () => {\n  _s();\n\n  const [researcherId, setResearcherId] = React.useState(\"\");\n  const [typeName, settypeName] = useState(\"\");\n  const [startDate, setstartDate] = useState(null);\n  const [endDate, setendDate] = useState(null);\n  const [description, setdescription] = useState(\"\");\n  const navigate = useNavigate();\n  const [researchers, setResearchers] = React.useState([]);\n\n  async function componentDidMount() {\n    const url = \"http://localhost:9000/Researchers\";\n    const response = await fetch(url);\n    const listeChercheurs = await response.json();\n    setResearchers(listeChercheurs);\n    console.log(researchers);\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let data = {\n      researcherId: researcherId,\n      ScientificExpertiseTypeName: typeName,\n      ScientificExpertiseDescription: description,\n      ScientificExpertiseStartDate: startDate,\n      ScientificExpertiseEndDate: endDate\n    };\n    console.log(data);\n    Axios.post(\"http://localhost:9000/Api/AddScientificExpertise\", data).then(res => {\n      console.log(res.data);\n      navigate('/Home');\n    }).catch(err => alert(err));\n  };\n\n  const handleDate1 = event => {\n    let startDate = `${event.getFullYear()}-${event.getMonth() + 1}-${event.getDate()}`;\n    setstartDate(startDate);\n    setstartDate(event);\n  };\n\n  const handleDate2 = event => {\n    let endDate = `${event.getFullYear()}-${event.getMonth() + 1}-${event.getDate()}`;\n    setendDate(endDate);\n    setendDate(event);\n  };\n\n  const handleChange = e => setResearcherId(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/Activity\",\n        class: \"close-button\",\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Expertise Scientifique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Chercheur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onClick: componentDidMount,\n        onChange: handleChange,\n        children: researchers.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.researcherId,\n            children: [item.researcherName, \" \", item.researcherSurname]\n          }, item.researcherId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Nom du Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Nom du type\",\n        className: \"input-container\",\n        name: \"typeName\",\n        id: \"typeName\",\n        value: typeName,\n        onChange: e => settypeName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Date de d\\xE9but\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \"datePicker\",\n        selected: startDate,\n        onChange: handleDate1,\n        withPortal: true,\n        placeholderText: \"Choix de date de d\\xE9but\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Date de fin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \"datePicker\",\n        selected: endDate,\n        onChange: handleDate2,\n        withPortal: true,\n        placeholderText: \"Choix de date de fin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"description\",\n        className: \"input-container\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChange: e => setdescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScientificExpertise, \"fA+eujrlIQaCNZ1knMXey0O79PE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ScientificExpertise;\nexport default ScientificExpertise;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScientificExpertise\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/PGROUP/ReactSpringBoot/HCERES-Spring-Boot/hceres-frontend/src/components/Activity/ScientificExpertise.js"],"names":["React","DatePicker","useState","Link","useNavigate","useParams","useEffect","Axios","ScientificExpertise","researcherId","setResearcherId","typeName","settypeName","startDate","setstartDate","endDate","setendDate","description","setdescription","navigate","researchers","setResearchers","componentDidMount","url","response","fetch","listeChercheurs","json","console","log","handleSubmit","event","preventDefault","data","ScientificExpertiseTypeName","ScientificExpertiseDescription","ScientificExpertiseStartDate","ScientificExpertiseEndDate","post","then","res","catch","err","alert","handleDate1","getFullYear","getMonth","getDate","handleDate2","handleChange","e","target","value","map","item","researcherName","researcherSurname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Activity.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport Axios from 'axios'\r\n\r\nconst ScientificExpertise = () => {\r\n    const [researcherId, setResearcherId] = React.useState(\"\");\r\n    const [typeName, settypeName] = useState(\"\");\r\n    const [startDate, setstartDate] = useState(null);\r\n    const [endDate, setendDate] = useState(null);\r\n    const [description, setdescription] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    \r\n    const [researchers, setResearchers] = React.useState([]);\r\n    async function componentDidMount() {\r\n\r\n        const url = \"http://localhost:9000/Researchers\";\r\n        const response = await fetch(url);\r\n\r\n        const listeChercheurs = await response.json();\r\n        \r\n        setResearchers(listeChercheurs)\r\n        console.log(researchers);\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let data = {\r\n\r\n            researcherId: researcherId,\r\n            ScientificExpertiseTypeName: typeName,\r\n            ScientificExpertiseDescription: description,\r\n            ScientificExpertiseStartDate: startDate,\r\n            ScientificExpertiseEndDate: endDate};\r\n        \r\n        console.log(data);\r\n        Axios.post(\"http://localhost:9000/Api/AddScientificExpertise\", data)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                navigate('/Home');\r\n            }).catch(err => alert(err))\r\n    }\r\n    const handleDate1 = (event) =>{\r\n        let startDate = `${event.getFullYear()}-${\r\n            event.getMonth() +1\r\n          }-${event.getDate()}`;\r\n          setstartDate(startDate);\r\n          setstartDate(event);\r\n        }\r\n\r\n        const handleDate2 = (event) =>{\r\n            let endDate = `${event.getFullYear()}-${\r\n                event.getMonth() +1\r\n              }-${event.getDate()}`;\r\n              setendDate(endDate);\r\n              setendDate(event);\r\n            }\r\n    \r\n    const handleChange = e => setResearcherId(e.target.value); \r\n    return (\r\n        <div className='form-container'>\r\n            <form className='form' onSubmit={handleSubmit}>\r\n                <a href=\"/Activity\" class=\"close-button\">&#10006;</a>\r\n                <h3 className='title'>Expertise Scientifique</h3>\r\n                <label className='label'>\r\n                    Chercheur\r\n                </label>\r\n                <select onClick={componentDidMount} onChange={handleChange}>\r\n                    {researchers.map(item => {\r\n                        return (<option key={item.researcherId} value={item.researcherId}>{item.researcherName} {item.researcherSurname}</option>);\r\n                    })}\r\n                </select>\r\n                <label className='label'>\r\n                    Nom du Type\r\n                </label>\r\n                <input\r\n                    placeholder='Nom du type'\r\n                    className='input-container'\r\n                    name=\"typeName\"\r\n                    id=\"typeName\"\r\n                    value={typeName}\r\n                    onChange={(e) => settypeName(e.target.value)}\r\n                    required />\r\n                <label className='label'>\r\n                    Date de début\r\n                </label>\r\n                <DatePicker\r\n                    className='datePicker'\r\n                    selected={startDate}\r\n                    onChange={handleDate1}\r\n                    withPortal\r\n                    placeholderText=\"Choix de date de début\" />\r\n                 <label className='label'>\r\n                    Date de fin\r\n                </label>\r\n                <DatePicker\r\n                    className='datePicker'\r\n                    selected={endDate}\r\n                    onChange={handleDate2}\r\n                    withPortal\r\n                    placeholderText=\"Choix de date de fin\" />\r\n\r\n                <label className='label' >\r\n                    description\r\n                </label>\r\n                <input\r\n                    placeholder='description'\r\n                    className='input-container'\r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    value={description}\r\n                    onChange={(e) => setdescription(e.target.value)}\r\n                    required />\r\n                \r\n                <button className='submit'>Valider</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default ScientificExpertise;"]},"metadata":{},"sourceType":"module"}